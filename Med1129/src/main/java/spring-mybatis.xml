<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop
	   https://www.springframework.org/schema/aop/spring-aop.xsd
	   http://www.springframework.org/schema/tx
	   http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
		http://www.springframework.org/schema/mvc
		http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <!-- 扫描类包，将标注Spring注解的类自动转化为Bean，同时完成Bean的注入  -->
    <!--<context:component-scan base-package="com.library.dao"/>
    <context:component-scan base-package="com.library.service"/>-->
    <context:property-placeholder location="classpath*:db.properties"/>
    <!--  定义一个使用DBCP实现的数据源 -->
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="${jdbc.driver}"/>
        <!-- url -->
        <property name="url" value="${jdbc.url}"/>
        <!-- 用户名 -->
        <property name="username" value="${jdbc.username}"/>
        <!-- 密码 -->
        <property name="password" value="${jdbc.password}"/>
    </bean>
    <!--<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        &lt;!&ndash; 加载 MyBatis 的配置文件 &ndash;&gt;
        &lt;!&ndash; <property name="configLocation" value="classpath:mybatis-config.xml"/> &ndash;&gt;
        <property name="mapperLocations" value="classpath:MyBatis/*"/>
    </bean>-->
    <!--<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg index="0" ref="sqlSessionFactory"/>
    </bean>-->

    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <bean id="medDAO" class="com.spring.dao.impl.MedDAOImpl">
        <property name="jdbcTemplate" ref="jdbcTemplate"/>
    </bean>
    <bean id="medService" class="com.spring.service.impl.MedServiceImpl">
        <property name="medDAO" ref="medDAO"/>
    </bean>

    <bean id="allLogAdvice" class="com.spring.aop.AllLogAdvice"/>

    <bean id="dataSourceTransactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <aop:config>
        <aop:advisor advice-ref="txadvice" pointcut-ref="logPointcut"/>
        <aop:aspect id="logAspect" ref="allLogAdvice">
            <aop:pointcut expression="execution(* com.spring.service.*Impl.find*(..))" id="logPointcut"/>


            <aop:before method="myBefore" pointcut-ref="logPointcut"/>
        </aop:aspect>
    </aop:config>

    <tx:advice id="txadvice" transaction-manager="dataSourceTransactionManager">
        <!-- 做事务操作 -->
        <tx:attributes>
            <tx:method name="addMed" propagation="REQUIRED"
                       isolation="DEFAULT" read-only="false" rollback-for="" timeout="-1"/>
        </tx:attributes>
    </tx:advice>
</beans>
